services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_c
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  gw:
    tty: true
    stdin_open: true
    container_name: gw_c
    build:
      context: .
      dockerfile: ./service-gw/Dockerfile
      target: development
    command: npm run start:dev
    env_file:
      - ./service-gw/.env
    volumes:
      - ./service-gw:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    depends_on:
      - rabbitmq

  orders:
    tty: true
    stdin_open: true
    container_name: orders_c
    build:
      context: .
      dockerfile: ./worker-orders/Dockerfile
      target: development
    env_file:
      - ./worker-orders/.env
    command: npm run start:dev
    volumes:
      - ./worker-orders:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq

  # database:
  #   image: postgres:14-alpine
  # container_name: pg_c

  #   environment:
  #     - POSTGRES_DB=app
  #     - POSTGRES_PASSWORD=user
  #     - POSTGRES_USER=user
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - db_data:/var/lib/postgresql/data

volumes:
  db_data:
